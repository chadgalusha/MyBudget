@page "/paymentfrequencytypespage"
@using MyBudget.Services
@using MyBudget.Models
@inject ITypeService<PaymentFrequencyTypes> paymentFrequencyTypeService

<h3 style="text-align:center">Payment Frequency Types</h3>
<p style="color:red">@Error</p>

@if (paymentFrequencyTypesList == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Payment Frequency Type Id</th>
				<th>Payment Frequency Type</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var type in paymentFrequencyTypesList)
			{
				<tr>
					<td>@type.PaymentFrequencyTypeId</td>
					<td>@type.PaymentFrequencyType</td>
					<td>
						<button class="btn btn-primary"
						@onclick="(() => EditType(type))">
						Edit
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
	<p>
		<button class="btn btn-success" @onclick="AddNewType">
			Add New Type
		</button>
	</p>

	@if (ShowPopup)
	{
		<div class="modal" tabindex="-1" style="display:block" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Edit Payment Frequency Type</h3>
                        <!-- Button to close the popup -->
                        <button type="button" class="close"
                        @onclick="ClosePopup">
                            <span aria-hidden="true">X</span>
                        </button>
                    </div>
                    <!-- Edit form for the current payment frequency type -->
                    <div class="modal-body">
                        <input class="form-control" type="number" disabled="disabled"
                       @bind="paymentFrequencyType.PaymentFrequencyTypeId" />
                        <input class="form-control" type="text"
                       placeholder="New Type"
                       @bind="paymentFrequencyType.PaymentFrequencyType" />
                        <br />
						<!-- Button to save the payment frequency type -->
                        <button class="btn btn-success"
                        @onclick="SaveType">
                            Save
                        </button>&nbsp;
                        <!-- Only show delete button if not a new record -->
                        @if (paymentFrequencyType.PaymentFrequencyTypeId > 0)
                        {
							<!-- Button to delete the payment frequency type -->
                            <button class="btn btn-danger"
                        @onclick="DeleteType">
                                Delete
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
	}
}

@code 
{
	string Error = "";
	List<PaymentFrequencyTypes> paymentFrequencyTypesList = new();
	PaymentFrequencyTypes paymentFrequencyType = new PaymentFrequencyTypes();
	bool ShowPopup = false;

	protected override async Task OnInitializedAsync()
	{
		paymentFrequencyTypesList = await paymentFrequencyTypeService.GetList();
	}

	void ClosePopup()
	{
		ShowPopup = false;
	}

	void AddNewType()
	{
		paymentFrequencyType = new PaymentFrequencyTypes();
		paymentFrequencyType.PaymentFrequencyTypeId = 0;
		ShowPopup = true;
	}

	void EditType(PaymentFrequencyTypes type)
	{
		paymentFrequencyType = type;
		ShowPopup = true;
	}

	async Task SaveType()
	{
		ShowPopup = false;
		Error = "";
	}

	async Task DeleteType()
	{
		ShowPopup = false;
		Error = "";
	}
}
