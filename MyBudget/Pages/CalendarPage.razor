@page "/calendarpage"
@using MyBudget.Components

@if (thisMonthIncomeHistoryList == null || thisMonthExpenseHistoryList == null)
{
	<MyBudgetLoadingIndicator />
}
else
{
	<div>
		<div class="budget-calendar">
			<MudToolBar class="calendar-date-bar">
				<MudIconButton Color="Color.Info" Icon="@Icons.Filled.ArrowCircleLeft" OnClick="BackOneMonth"></MudIconButton>
				<h3 style="text-align:center;margin-top:6px;">@GetMonthString(month) @year</h3>
				<MudIconButton Color="Color.Info" Icon="@Icons.Filled.ArrowCircleRight" OnClick="ForwardOneMonth"></MudIconButton>
			</MudToolBar>

			<div class="calendar-container">
				<div class="calendar-header">
					<div>Sunday</div>
					<div>Monday</div>
					<div>Tuesday</div>
					<div>Wednesday</div>
					<div>Thursday</div>
					<div>Friday</div>
					<div>Saturday</div>
				</div>

				<CalendarGrid startingIndex="@startingIndex" endingIndex="@endingIndex" today="@today"
					thisMonthIncomeHistoryList="@thisMonthIncomeHistoryList" thisMonthExpenseHistoryList="@thisMonthExpenseHistoryList"
					UpdateCurrentDay="@UpdateCurrentDay" EditIncomeHistory="@EditIncomeHistory" EditExpenseHistory="@EditExpenseHistory"/>
			</div>
		</div>
		<div class="budget-calendar-menu">
			<h4>@GetMonthString(selectedDateTime.Month) @selectedDateTime.Day, @selectedDateTime.Year</h4>
			<MudButtonGroup Color="Color.Info" Variant="Variant.Outlined" VerticalAlign="true" style="margin: 5px 10px 5px;display:flex;justify-content:center;">
				<MudButton OnClick="TurnOnExpenseHistory">New Expense History</MudButton>
				<MudButton OnClick="TurnOnIncomeHistory">New Income History</MudButton>
			</MudButtonGroup>

			<ExpenseHistoryForm selectedDate="selectedDateTime" expenseHistory="expenseHistory" expenseCategoryList="expenseCategoryList"
			SaveExpenseHistory="() => SaveExpenseHistoryAsync(expenseHistory)" CancelExpenseHistory="CancelExpenseHistory" @ref="expenseHistoryForm"
			UpdateExpenseHistory="() => UpdateExpenseHistoryAsync(expenseHistory)" DeleteExpenseHistory="() => DeleteConfirmExpenseHistory(expenseHistory)" />

			<IncomeHistoryForm @ref="incomeHistoryForm" selectedDate="selectedDateTime" incomeHistory="incomeHistory"
			SaveIncomeHistory="() => SaveIncomeHistoryAsync(incomeHistory)" CancelIncomeHistory="CancelIncomeHistory"
			UpdateIncomeHistory="() => UpdateIncomeHistoryAsync(incomeHistory)" DeleteIncomeHistory="() => DeleteConfirmIncomeHistory(incomeHistory)"/>
		</div>
	</div>
}
