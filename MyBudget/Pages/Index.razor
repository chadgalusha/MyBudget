@page "/"
@using MyBudget.ViewModels
@using MyBudget.Services
@inject IIncomeAndExpensesViewModelService service

<h1>Hello, world!</h1>

Welcome to your new app.

<Chart Config="_config" @ref="_chart"></Chart>

@code {
	private BarChartConfig _config;
	private Chart _chart;

	protected override void OnInitialized()
	{
		_config = new BarChartConfig()
		{
			Options = new Options()
			{
				Plugins = new Plugins()
				{
					Legend = new Legend()
					{
						Align = LegendAlign.Center,
						Display = false,
						Position = LegendPosition.Right
					}
				},
				Scales = new Scales()
				{
					X = new XAxes()
					{
						Stacked = true,
						Ticks = new Ticks()
						{
							MaxRotation = 0,
							MinRotation = 0
						}
					},
					Y = new YAxes()
					{
						Stacked = true
					}
				}
			}
		};

		var lastMonthIncomeExpensesVM = LastMonthIncomeExpenseVM();
		_config.Data.Labels = LastMonthVMDataLables(lastMonthIncomeExpensesVM);

		_config.Data.Datasets.Add(new BarDataset()
		{
			Label = "Value",
			Data = LastMonthVMData(lastMonthIncomeExpensesVM),
			BackgroundColor = new List<string>() { "green", "red" },
			BorderColor = new List<string>() { "black", "black" },
			BorderWidth = 1
		});
	}

	IncomeAndExpensesViewModel LastMonthIncomeExpenseVM()
	{
		IncomeAndExpensesViewModel lastMonthViewModel = new()
		{
			Income = "Last Month Income",
			IncomeAmount = service.LastMonthIncome(),
			Expenses = "Last Month Expenses",
			ExpensesAmount = service.LastMonthExpenses()
		};

		return lastMonthViewModel;
	}

	List<string> LastMonthVMDataLables(IncomeAndExpensesViewModel vm)
	{
		return new List<string>() { vm.Income, vm.Expenses };
	}

	List<decimal> LastMonthVMData(IncomeAndExpensesViewModel vm)
	{
		return new List<decimal>() { vm.IncomeAmount, vm.ExpensesAmount };
	}
}